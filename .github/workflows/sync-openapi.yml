---
name: Sync OpenAPI Documentation

"on":
  # Run daily at 6 AM UTC
  schedule:
    - cron: '0 6 * * *'

  # Allow manual trigger
  workflow_dispatch: {}

  # Run on pushes to main for testing
  push:
    branches: [main]
    paths:
      - '.github/workflows/sync-openapi.yml'

jobs:
  sync-openapi:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download latest OpenAPI spec
        run: |
          echo "Downloading OpenAPI spec from BlueHive API"
          curl -f -s -o /tmp/openapi-new.json \
            https://api.bluehive.com/docs/json

          # Validate that we got valid JSON
          if ! jq empty /tmp/openapi-new.json 2>/dev/null; then
            echo "Error: Downloaded content is not valid JSON"
            exit 1
          fi

          echo "Successfully downloaded and validated OpenAPI spec"

      - name: Check for changes
        id: check_changes
        run: |
          # Compare with existing file
          if [ -f api-reference/openapi.json ]; then
            if cmp -s /tmp/openapi-new.json api-reference/openapi.json; then
              echo "No changes detected in OpenAPI spec"
              echo "changes=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected in OpenAPI spec"
              echo "changes=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "No existing OpenAPI spec found, will create new one"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Update OpenAPI spec
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          # Backup existing file if it exists
          if [ -f api-reference/openapi.json ]; then
            cp api-reference/openapi.json api-reference/openapi.json.backup
          fi

          # Copy new file
          cp /tmp/openapi-new.json api-reference/openapi.json

          # Format the JSON nicely
          jq . api-reference/openapi.json > /tmp/openapi-formatted.json
          mv /tmp/openapi-formatted.json api-reference/openapi.json

          echo "OpenAPI spec updated successfully"

      - name: Commit changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add api-reference/openapi.json

          # Get some info about the new spec for the commit message
          SPEC_TITLE=$(jq -r '.info.title // "API"' api-reference/openapi.json)
          SPEC_VERSION=$(jq -r '.info.version // "unknown"' \
            api-reference/openapi.json)

          git commit -m "Update OpenAPI spec: $SPEC_TITLE v$SPEC_VERSION

          Auto-sync from https://api.bluehive.com/docs/json
          Generated by GitHub Action on $(date -u '+%Y-%m-%d %H:%M:%S UTC')"

          git push

          echo "Changes committed and pushed successfully"

      - name: Summary
        run: |
          if [ "${{ steps.check_changes.outputs.changes }}" == "true" ]; then
            echo "✅ OpenAPI spec was updated and committed"
          else
            echo "ℹ️ No changes detected, OpenAPI spec is up to date"
          fi
